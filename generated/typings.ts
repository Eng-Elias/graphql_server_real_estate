/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Mutation: {};
  Owner: { // root type
    city?: string | null; // String
    contactNumber?: string | null; // String
    id?: number | null; // Int
    name?: string | null; // String
    profileImage?: string | null; // String
  }
  Property: { // root type
    area?: string | null; // String
    description?: string | null; // String
    facilities?: string | null; // String
    id?: number | null; // Int
    images?: string | null; // String
    mainImage?: string | null; // String
    name?: string | null; // String
    ownerId?: number | null; // Int
    price?: number | null; // Int
    propertyType?: string | null; // String
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createOwner: NexusGenRootTypes['Owner'] | null; // Owner
    createProperty: NexusGenRootTypes['Property'] | null; // Property
    deleteOwner: NexusGenRootTypes['Owner'] | null; // Owner
    deleteProperty: NexusGenRootTypes['Property'] | null; // Property
    updateOwner: NexusGenRootTypes['Owner'] | null; // Owner
    updateProperty: NexusGenRootTypes['Property'] | null; // Property
  }
  Owner: { // field return type
    city: string | null; // String
    contactNumber: string | null; // String
    id: number | null; // Int
    name: string | null; // String
    profileImage: string | null; // String
  }
  Property: { // field return type
    area: string | null; // String
    description: string | null; // String
    facilities: string | null; // String
    id: number | null; // Int
    images: string | null; // String
    mainImage: string | null; // String
    name: string | null; // String
    owner: NexusGenRootTypes['Owner'] | null; // Owner
    ownerId: number | null; // Int
    price: number | null; // Int
    propertyType: string | null; // String
  }
  Query: { // field return type
    getOwnerById: NexusGenRootTypes['Owner'] | null; // Owner
    getOwners: Array<NexusGenRootTypes['Owner'] | null> | null; // [Owner]
    getProperties: Array<NexusGenRootTypes['Property'] | null> | null; // [Property]
    getPropertyById: NexusGenRootTypes['Property'] | null; // Property
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createOwner: 'Owner'
    createProperty: 'Property'
    deleteOwner: 'Owner'
    deleteProperty: 'Property'
    updateOwner: 'Owner'
    updateProperty: 'Property'
  }
  Owner: { // field return type name
    city: 'String'
    contactNumber: 'String'
    id: 'Int'
    name: 'String'
    profileImage: 'String'
  }
  Property: { // field return type name
    area: 'String'
    description: 'String'
    facilities: 'String'
    id: 'Int'
    images: 'String'
    mainImage: 'String'
    name: 'String'
    owner: 'Owner'
    ownerId: 'Int'
    price: 'Int'
    propertyType: 'String'
  }
  Query: { // field return type name
    getOwnerById: 'Owner'
    getOwners: 'Owner'
    getProperties: 'Property'
    getPropertyById: 'Property'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOwner: { // args
      city?: string | null; // String
      contactNumber?: string | null; // String
      name?: string | null; // String
      profileImage?: string | null; // String
    }
    createProperty: { // args
      area?: string | null; // String
      description?: string | null; // String
      facilities?: string | null; // String
      images?: string | null; // String
      mainImage?: string | null; // String
      name?: string | null; // String
      ownerId?: number | null; // Int
      price?: number | null; // Int
      propertyType?: string | null; // String
    }
    deleteOwner: { // args
      id?: number | null; // Int
    }
    deleteProperty: { // args
      id?: number | null; // Int
    }
    updateOwner: { // args
      city?: string | null; // String
      contactNumber?: string | null; // String
      id?: number | null; // Int
      name?: string | null; // String
      profileImage?: string | null; // String
    }
    updateProperty: { // args
      area?: string | null; // String
      description?: string | null; // String
      facilities?: string | null; // String
      id?: number | null; // Int
      images?: string | null; // String
      mainImage?: string | null; // String
      name?: string | null; // String
      ownerId?: number | null; // Int
      price?: number | null; // Int
      propertyType?: string | null; // String
    }
  }
  Query: {
    getOwnerById: { // args
      id?: number | null; // Int
    }
    getProperties: { // args
      description?: string | null; // String
      name?: string | null; // String
      priceGreaterThan?: number | null; // Int
      priceLessThan?: number | null; // Int
      propertyType?: string | null; // String
    }
    getPropertyById: { // args
      id?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}